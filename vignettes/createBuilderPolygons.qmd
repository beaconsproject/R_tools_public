---
title: "Create builder polygons"
author: "Melina Houle"
format: html
---


## Intro

This script generates potential benchmarks, as well as upstream and downstream polygons based on the **BUILDER** output. 

The first step is to locate catchments layer and specify the directory where BUILDER output were saved. 

These polygons are then used to [assess dendritic connectivity](calcDCI.html) by clipping the stream network to each polygon and analyzing how water flows within its boundaries.

### Generate potential benchmarks, upstream and downstream polygons from catchments using **BUILDER** output files

Function `prep_input_column` allow to read Builder output tables that uses column format. The output can then be passed to dissolve_catchment_from_table to generate polygons using enumerated 'CATCHNUM'. `prep_input_column` needs the following:

- **out_dir**: Point to a directory that contains Builder output
- **type**: Indicate which file to read. Type can be 'BENCHMARKS', 'UPSTREAM' or 'DOWNSTREAM'. Default is 'BENCHMARKS'.


```r
# Load libraries
library(sf)
library(dplyr)
library(utils)

source("./R/createBuilderPolygons_dependencies.R")


# --------------------------------------
# SET PARAMS  --------------------
# --------------------------------------

# Set working directory
setwd("your/path/to/downloads")

dirpath <- getwd()

# Create the folder structure
builder_dir <- file.path(dirpath, "Builder_output")

out_dir <- file.path(dirpath, "shp_output")
if (!dir.exists(out_dir)) {
  dir.create(out_dir, recursive = TRUE)
}

#Set access path 
catchments <- file.path(dirpath, "data/catchments.shp")

#Set access path catchments layer and initialize
catchments_sf <- st_read(catchments)

# Name given to identify unique benchmark
colName <- "PB"



# --------------------------------------
#--RUN
# --------------------------------------
type <- "BENCHMARKS"
out_tab <- prep_input_column(builder_dir, type = type)

# Convert builder output tables to polygons
poly_sf <- dissolve_catchments_from_table(catchments_sf = catchments_sf, 
                                             input_table = out_tab, 
                                             out_feature_id = colName)

write_sf(poly_sf, dsn =file.path(out_dir, "benchmarks_poly.shp"), append = FALSE)

#############################################
#  Generate upstream polygons
#############################################
type <- "UPSTREAM"
out_tab <- prep_input_column(builder_dir, type = type)

# Convert builder output tables to polygons
poly_sf <- dissolve_catchments_from_table(catchments_sf = catchments_sf, 
                                             input_table = out_tab, 
                                             out_feature_id = colName)

write_sf(poly_sf, dsn =file.path(out_dir, "upstream_poly.shp"), append = FALSE)

#############################################
#  Generate downstream polygons
#############################################
type <- "DOWNSTREAM"
out_tab <- prep_input_column(builder_dir, type = type)

# Convert builder output tables to polygons
poly_sf <- dissolve_catchments_from_table(catchments_sf = catchments_sf, 
                                             input_table = out_tab, 
                                             out_feature_id = colName)

write_sf(poly_sf, dsn =file.path(out_dir, "downstream_poly.shp"), append = FALSE)
```

